<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>parent</artifactId>
        <groupId>org.igniterealtime.openfire</groupId>
        <version>4.2.0-beta</version>
    </parent>
    <artifactId>webadmin</artifactId>
    <name>Web-based Administration Interface</name>
    <packaging>war</packaging>

    <properties>
        <openfireHome>${project.parent.build.directory}/openfire</openfireHome>
        <warSourceDirectory>${project.basedir}/../src/web</warSourceDirectory>
    </properties>

    <build>
        <plugins>
            <!-- Create the (exploded) web archive in the ${openfireHome}/plugins/admin/webapp directory -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <!-- Copy the webapp folder directly to the admin plugin -->
                    <webappDirectory>${openfireHome}/plugins/admin/webapp</webappDirectory>
                    <!-- Exclude JSP files, they will be compiled -->
                    <warSourceExcludes>**/*.jsp,**/*.jspf,WEB-INF/lib/*.*</warSourceExcludes>
                    <warSourceDirectory>${warSourceDirectory}</warSourceDirectory>
                    <!-- Use the web.xml, which contains the generated servlet declarations from the jetty-jspc-maven-plugin -->
                    <webXml>${project.build.directory}/web.xml</webXml>
                </configuration>
                <executions>
                    <!-- Skip the creation of a *.war file, we don't need it -->
                    <execution>
                        <id>default-war</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Only create the exploded webapp folder -->
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Compile the JSP pages -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-jspc-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <executions>
                    <execution>
                        <id>jspc</id>
                        <goals>
                            <goal>jspc</goal>
                        </goals>
                        <configuration>
                            <webAppSourceDirectory>${warSourceDirectory}</webAppSourceDirectory>
                            <!-- Merge this web.xml with the generated servlet declarations -->
                            <webXml>${warSourceDirectory}/WEB-INF/web.xml</webXml>
                            <jspc>
                                <package>org.jivesoftware.openfire.admin</package>
                            </jspc>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>xmppserver</artifactId>
                        <version>${project.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.igniterealtime.openfire</groupId>
                        <artifactId>webadmintld</artifactId>
                        <version>${project.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- We don't generate a war file (only the exploded directory), so there's no artifact to install -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- Copy the plugin.xml -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>Copy plugin.xml</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${openfireHome}/plugins/admin</outputDirectory>
                            <resources>
                                <resources>
                                    <directory>${project.basedir}/../src/plugins/admin</directory>
                                </resources>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>opensymphony</groupId>
            <artifactId>sitemesh</artifactId>
            <version>2.2.1</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>xmppserver</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
        </dependency>
        <dependency>
            <groupId>org.directwebremoting</groupId>
            <artifactId>dwr</artifactId>
        </dependency>
    </dependencies>
</project>
